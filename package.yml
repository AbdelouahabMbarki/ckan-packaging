---
- hosts: all
  vars_prompt:
   - name: version
     prompt: "CKAN Version (branch or tag)"
     private: True
   - name: pythonversion
     prompt: "Python Version (py2 or py3)"
     private: True
   - name: iteration
     prompt: "Iteration"
     private: True
   - name: datapusher
     prompt: "Enable DataPusher? [Y/n]"
     default: "y"
     private: True
  tasks:
    - name: set regex for CKAN version
      set_fact:
        re: '\D+\-\D+(?P<capture>\d+\.\d+)'
    - set_fact:
        ckanver: "{{ version | regex_search(re, '\\g<capture>') }}"
        register: ckanver
    - debug:
        var: ckanver[0]
    
    # Install Ubuntu apt Packages
    - name: Install apt Packages 
      include_tasks: "py2/package.yml"
      when: pythonversion == "py2"
    - name: Install Packages 
      include_tasks: "py3/package.yml"
      when: pythonversion == "py3"
    - debug:
        var: pythonversion

    - name: Check if apache service exists
      stat: path=/etc/init.d/apache2
      register: apache_status
    - debug:
        var: apache_status
  
    - name: Stop apache if it's running
      service: name=apache2 state=stopped
      when: apache_status.stat.exists
      register: apache_stopped

    - name: make sure nginx is installed
      action: apt pkg=nginx state=present update_cache=yes

    - name: install fpm
      action: command gem install -v 1.11.0 fpm -- creates=/usr/local/bin/fpm

    - name: delete old directories
      action: file path={{ item }} state=absent
      with_items:
        - /etc/ckan
        - /usr/lib/ckan
        - /root/.cache/pip

    - name: get setuptools (I)
      action: get_url url=https://bootstrap.pypa.io/ez_setup.py dest=/tmp
  
    - name: get setuptools (II)
      action: command python /tmp/ez_setup.py
  
    - name: get pip (I)
      action: get_url url=https://bootstrap.pypa.io/get-pip.py dest=/tmp

    # Install pip and virtualenv
    - name: Install apt Packages 
      include_tasks: "py2/virtualenv.yml"
      when: pythonversion == "py2"
    - name: Install Packages 
      include_tasks: "py3/virtualenv.yml"
      when: pythonversion == "py3"

    # Pull CKAN 
    - name: pull ckan software
      action: git repo=https://github.com/ckan/ckan dest=/usr/lib/ckan/default/src/ckan version={{ version }}

    ## - name: See whats going on
    ## action: command ls -l /usr/lib/ckan/default/bin

    - name: check requirements file name
      shell: "[ -f /usr/lib/ckan/default/src/ckan/pip-requirements.txt ] && echo 'pip-requirements.txt' || echo 'requirements.txt'"
      register: requirements_file_name

    - debug:
        var: requirements_file_name

    # Install ckan and dependancies
    - name: Install ckan and dependancies
      include_tasks: "py2/installckan.yml"
      when: pythonversion == "py2"

    - name: Install Packages 
      include_tasks: "py3/installckan.yml"
      when: pythonversion == "py3"

    # Install datapusher
    - name: Install datapusher for Python 2 
      include_tasks: "py2/datapusher.yml"
      when: (pythonversion == "py2") and (datapusher == 'y')
    - name: Install Packages 
      include_tasks: "py3/datapusher.yml"
      when: (pythonversion == "py3") and (datapusher == 'y')

    # Install web files and dependancies for CKAN 2.9
    - name: Install web and dependancies for CKAN 2.9
      include_tasks: "2.9/web.yml"
      when: ckanver[0] == "2.9"

    # Install web files and dependancies for CKAN 2.8
    - name: Install web and dependancies for CKAN 2.8
      include_tasks: "2.8/web.yml"
      when: ckanver[0] == "2.8"
    
    # Install web files and dependancies for CKAN 2.7
    - name: Install web and dependancies for CKAN 2.7
      include_tasks: "2.7/web.yml"
      when: ckanver[0] == "2.7"
    
    # Copy other application files CKAN 2.9
    - name: Copy other application files for CKAN 2.9
      include_tasks: "2.9/app.yml"
      when: ckanver[0] == "2.9"

    # Copy other application files for CKAN 2.8
    - name: Copy other application files for CKAN 2.8
      include_tasks: "2.8/app.yml"
      when: ckanver[0] == "2.8"
    
    # Copy other application files for CKAN 2.7
    - name: Copy other application files for CKAN 2.7
      include_tasks: "2.7/app.yml"
      when: ckanver[0] == "2.7"

    # template the after web script for CKAN 2.9
    - name: template the after web script for CKAN 2.9
      action: template src=2.9/after_web.j2 dest=/tmp/after_web.sh mode=744
      when: ckanver[0] == "2.9"

    # template the after web script for CKAN 2.8
    - name: template the after web script for CKAN 2.8
      action: template src=2.8/after_web.j2 dest=/tmp/after_web.sh mode=744
      when: ckanver[0] == "2.8"
  
    # template the after web script for CKAN 2.7
    - name: template the after web script for CKAN 2.7
      action: template src=2.7/after_web.j2 dest=/tmp/after_web.sh mode=744
      when: ckanver[0] == "2.7"

    # Build deb package for ckan 2.9
    - name: Build deb package for CKAN 2.9
      include_tasks: "2.9/build.yml"
      when: ckanver[0] == "2.9"

    # Build deb package for ckan 2.8
    - name: Build deb package for CKAN 2.8
      include_tasks: "2.8/build.yml"
      when: ckanver[0] == "2.8"
    
    # Build deb package for ckan 2.7
    - name: Build deb package for CKAN 2.7
      include_tasks: "2.7/build.yml"
      when: ckanver[0] == "2.7"
    